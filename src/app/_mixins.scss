@use "sass:math";
/* ----------------  Define breakpoints ---------------- */

// Breakpoints
$breakpoint-mobile-small: 320px; //xs
$breakpoint-mobile: 540px; //s
$breakpoint-tablet: 1024px; //m
$breakpoint-desktop: 1440px; //l

// Mixins for responsive design

@mixin mobile-small {
  @media (max-width: #{$breakpoint-mobile-small}) {
    @content;
  }
}
@mixin mobile {
  @media (max-width: #{$breakpoint-mobile}) {
    @content;
  }
}

@mixin tablet($orientation: null) {
  @if $orientation == portrait {
    @media (min-width: #{$breakpoint-mobile + 1}) and (max-width: #{$breakpoint-tablet}) and (orientation: portrait) {
      @content;
    }
  } @else if $orientation == landscape {
    @media (min-width: #{$breakpoint-mobile + 1}) and (max-width: #{$breakpoint-tablet}) and (orientation: landscape) {
      @content;
    }
  } @else {
    @media (max-width: #{$breakpoint-tablet}) {
      @content;
    }
  }
}

@mixin desktop {
  @media (min-width: #{$breakpoint-tablet + 1}) {
    @content;
  }
}

// Responsive Clamp
@function responsive-clamp($min, $max, $min-viewport, $max-viewport) {
  $scaling-factor: math.div($max - $min, $max-viewport - $min-viewport);
  @return clamp(
    #{$min},
    calc(#{$min} + (100vw - #{$min-viewport}) * #{$scaling-factor}),
    #{$max}
  );
}

// Extra Small to Large (xs to l)
@function clamp-xs-l($min, $max) {
  @return responsive-clamp(
    $min,
    $max,
    $breakpoint-mobile-small,
    $breakpoint-desktop
  );
}

// Small to Large (s to l)
@function clamp-s-l($min, $max) {
  @return responsive-clamp($min, $max, $breakpoint-mobile, $breakpoint-desktop);
}

// Extra Small to Small (xs to s)
@function clamp-xs-s($min, $max) {
  @return responsive-clamp(
    $min,
    $max,
    $breakpoint-mobile-small,
    $breakpoint-mobile
  );
}

// Medium to Large (m to l)
@function clamp-m-l($min, $max) {
  @return responsive-clamp($min, $max, $breakpoint-tablet, $breakpoint-desktop);
}

// Small to Medium (s to m)
@function clamp-s-m($min, $max) {
  @return responsive-clamp($min, $max, $breakpoint-mobile, $breakpoint-tablet);
}

// Mixin for Responsive Font Size
@mixin responsive-font-size($min-size, $max-size) {
  $min-viewport: $breakpoint-mobile-small;
  $max-viewport: $breakpoint-desktop;

  font-size: responsive-clamp(
    $min-size,
    $max-size,
    $min-viewport,
    $max-viewport
  );
}

/* ----------------  Display Flex variables ---------------- */
@mixin flex-cross-center {
  display: flex;
  align-items: center;
}

@mixin flex-all-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flexbox(
  $justify: flex-start,
  $align: stretch,
  $direction: row,
  $wrap: nowrap
) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
  flex-wrap: $wrap;
}
/* ----------------  Display Grid variables ---------------- */

@mixin grid-container {
  position: relative;
  display: grid;
  max-width: 100vw;
  height: auto;
  border: $border-primary;
  grid-auto-flow: row;
  box-sizing: border-box;
}
@mixin grid-box {
  display: grid;
  width: 100%;
  height: 100%;
  border: $border-primary;
}

@mixin grid-right-bottom {
  align-self: end;
  justify-self: end;
  padding: 0.5em;
}

@mixin grid-left-top {
  align-self: start;
  justify-self: start;
  padding: 0.5em;
}

@mixin grid-col-2x1 {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  grid-template-rows: 100%;
}

@mixin grid-row-1x2 {
  display: grid;
  grid-template-rows: repeat(2, 1fr);
  grid-template-columns: 100%;
}

@mixin grid-item($area) {
  grid-area: $area;
}

@mixin grid-position($position) {
  @if $position != null {
    grid-area: nth($position, 1) /
      nth($position, 2) /
      span
      nth($position, 3) /
      span
      nth($position, 4);
  } @else {
    display: none;
  }
}

/* ----------------  Common Element ---------------- */

@mixin small-star {
  position: relative;
  width: clamp-xs-l(16px, 42px);
  height: clamp-xs-l(16px, 42px);
}

@mixin large-star {
  position: relative;
  width: clamp-xs-l(24px, 72px);
  height: clamp-xs-l(24px, 72px);
}
